<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!-- 

==========================================================================================
                     Steering file template for the pysub framework

                               ==> hitmaker-tmp.xml <===

Author: Antonio Bulgheroni, INFN <mailto:antonio.bulgheroni@gmail.com>
Version: $Id: hitmaker-tmp.xml,v 1.3 2009-06-04 17:19:01 bulgheroni Exp $
==========================================================================================

--> 

<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="AIDA"/>
      <processor name="LoadRefHitDB"/>
      <processor name="LoadPreAlignment"/>      
      <processor name="MyEUTelApplyPreAlignment"/>
      <processor name="MyEUTelMille"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @ResultPath@/@RunType@/@prefix@@RunNumber@/@RunNumber@-hits.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFile@"/>
      <parameter name="MaxRecordNumber" value="2000000"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

 <processor name="AIDA" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistoPath@/@RunType@/@prefix@@RunNumber@/@RunNumber@-alignment"/>
  <!-- type of output file xml (default) or root ( only OpenScientist)-->
  <parameter name="FileType" type="string" value="root"/>
</processor>

<processor name="LoadRefHitDB" type="ConditionsProcessor">
 <!--ConditionsProcessor provides access to conditions data  transparently from LCIO files or a databases, using LCCD-->
  <!--Initialization string for conditions database-->
  <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
  <!--Initialization of a simple conditions file handler-->
  <parameter name="SimpleFileHandler" type="StringVec"> refhit @DbPath@/@RunType@/reference-db.slcio referenceHit </parameter>
</processor>

  <processor name="LoadPreAlignment" type="ConditionsProcessor">
    <parameter name="DBInit" type="string" value="localhost:lccd_test:align:tel"/>
    <parameter name="SimpleFileHandler" type="StringVec"> prealign @DbPath@/@RunType@/prealignment-db.slcio alignment </parameter>
  </processor>

  <processor name="MyEUTelApplyPreAlignment" type="EUTelApplyAlignmentProcessor">
    <parameter name="alignmentCollectionNames"> prealign </parameter>
    <parameter name="InputHitCollectionName" type="string" lcioInType="TrackerHit"> hits </parameter>
    <parameter name="OutputHitCollectionName" type="string" lcioOutType="TrackerHit"> prealignedhits </parameter>
    <parameter name="CorrectionMethod" type="int" value="1"/>
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>

    <parameter name="DoAlignCollection" type="bool" value="true"/>
    <parameter name="HistogramSwitch" type="bool" value="false"/>
    <parameter name="DEBUG" type="bool" value="false"/>
    <parameter name="PrintEvents" type="int" value="0"/>
  </processor>
  
 <processor name="MyEUTelMille" type="EUTelMille">
  <!--EUTelMille uses the MILLE program to write data files for MILLEPEDE II.-->
    <parameter name="ReferenceCollection" type="string" > refhit </parameter>
    <parameter name="ApplyToReferenceCollection" type="bool" value="1"/>
    <!--parameter name="HotPixelCollectionName" type="string" value="hotpixel_m26"/-->
    <!--parameter name="HotPixelCollectionName" type="string" value="sparse"/-->

  <!--This is the name of the LCIO file name with the output alignmentconstants (add .slcio)-->
  <parameter name="AlignmentConstantLCIOFile" type="string" value="@DbPath@/@RunType@/alignment-db.slcio"/>

  <!--Name of the Millepede binary file.-->
  <parameter name="BinaryFilename" type="string" value="@ResultPath@/@RunType@/align-mille.bin"/>

  <!--Name of the steering file for the pede program.-->
  <parameter name="PedeSteerfileName" type="string" value="@ResultPath@/@RunType@/pede-steer.txt"/>

  <!--Execute the pede program using the generated steering file.-->
  <parameter name="RunPede" type="int" value="@RunPede@"/>

  <!--Use cuts on the residuals to reduce the combinatorial background. 0 for off (default), 1 for on-->
  <parameter name="UseResidualCuts" type="int" value="@UseResidualCuts@"/>

  <!--Residual cuts along both size in microns-->
  <parameter name="ResidualsXMax" type="FloatVec"> @ResidualXMax@ </parameter>
  <parameter name="ResidualsXMin" type="FloatVec"> @ResidualXMin@ </parameter>
  <parameter name="ResidualsYMax" type="FloatVec"> @ResidualYMax@ </parameter>
  <parameter name="ResidualsYMin" type="FloatVec"> @ResidualYMin@ </parameter>
  
  <!-- 
       ========================
       Parameters not modified 
       ========================
  -->
  <!--Hit collection name-->
  <parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> prealignedhits </parameter>
  <!--parameter name="HitCollectionName" type="string" lcioInType="TrackerHit"> hits </parameter-->
  <!--Track collection name-->
  <parameter name="TrackCollectionName" type="string" lcioInType="Track"> fittracks </parameter>
  <!--Number of alignment constants used. Available mode are: 1 - shifts in the X and Y directions and a rotation around the Z axis, 2 - only shifts in the X and Y directions-->
  <parameter name="AlignMode" type="int" value="3"/>
  <parameter name="AllowedMissingHits" type="int" value="1"/>
  <!--Maximal allowed distance between hits entering the fit per 10 cm space between the planes.-->
  <parameter name="DistanceMax" type="float" value="@DistanceMax@"/>
  <!--Exclude planes from fit.-->
  <parameter name="ExcludePlanes" type="IntVec">@ExcludePlanes@</parameter>
  <!--Fix sensor planes in the fit according to their sensor ids.-->
  <parameter name="FixedPlanes" type="IntVec">@FixedPlanes@</parameter>
  <!--Generate a steering file for the pede program.-->
  <parameter name="GeneratePedeSteerfile" type="int" value="1"/>
  <!--Selects the source of input hits. 0 - hits read from hitfile with simple trackfinding. 1 - hits read from output of tracking processor. 2 - Test mode. Simple internal simulation and simple trackfinding.-->
  <parameter name="InputMode" type="int" value="0"/>
  <!--Maximal number of track candidates.-->
  <parameter name="MaxTrackCandidates" type="int" value="100000"/>
  <parameter name="MaxTrackCandidatesTotal" type="int" value="100000"/>
  <!--Use only events with one hit in every plane.-->
  <parameter name="OnlySingleHitEvents" type="int" value="0"/>
  <!--Use only events with one track candidate.-->
  <parameter name="OnlySingleTrackEvents" type="int" value="0"/>
  <!-- parameter name="FixParameter" type="int" value="63 63 63    63  63 63"/ -->
  <!-- parameter name="FixParameter" type="int" value="4  4 4       4  4 4"  /-->
  <!-- parameter name="FixParameter" type="int" value="63 28 28     28  28 28"/ -->
  <!-- parameter name="FixParameter" type="int" value=" 0  0  0      0   0  0"/ -->
  <!-- parameter name="FixParameter" type="int" value="16 16 16     16  16 16"/ -->
  <!-- parameter name="FixParameter" type="int" value="60 60 60     60  60 60"/ -->
  <parameter name="FixParameter" type="IntVec">@FixParameter@</parameter>
  <!-- parameter name="FixParameter" type="int" value="56 56 56     56  56 56"/ -->
  <!--Start values for the alignment for the angle gamma.-->
  <!--parameter name="PedeUserStartValuesGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the X direction.-->
  <!--parameter name="PedeUserStartValuesX" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Start values for the alignment for shifts in the Y direction.-->
  <!--parameter name="PedeUserStartValuesY" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Resolution of the telescope for Millepede.-->
  <parameter name="TelescopeResolution" type="float" value="10"/>
  <parameter name="ResolutionX" type="FloatVec">@ResolutionX@</parameter>
  <parameter name="ResolutionY" type="FloatVec">@ResolutionY@</parameter>
  <parameter name="ResolutionZ" type="FloatVec">@ResolutionZ@</parameter>
  <!--Rotation around the x axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorAlpha" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the y axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorBeta" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Rotation around the z axis of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorGamma" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Resolution assumed for the sensors in test mode.-->
  <!--parameter name="TestModeSensorResolution" type="float" value="3"/-->
  <!--X shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorXShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Y shifts of the sensors in test mode (to be determined by the alignment).-->
  <!--parameter name="TestModeSensorYShifts" type="FloatVec"> 0 0 0 0 0 0 </parameter-->
  <!--Z positions of the sensors in test mode.-->
  <!--parameter name="TestModeSensorZPositions" type="FloatVec"> 20000 40000 60000 80000 100000 120000 </parameter-->
  <!--Width of the track slope distribution in the x direction-->
  <!--parameter name="TestModeXTrackSlope" type="float" value="0.0005"/-->
  <!--Width of the track slope distribution in the y direction-->
  <!--parameter name="TestModeYTrackSlope" type="float" value="0.0005"/-->
  <!--Give start values for pede by hand (0 - automatic calculation of start values, 1 - start values defined by user).-->
  <!--parameter name="UsePedeUserStartValues" type="int" value="0"/-->

</processor>
</marlin>
