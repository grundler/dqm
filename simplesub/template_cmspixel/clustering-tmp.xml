<?xml version="1.0" encoding="us-ascii"?>
<!-- ?xml-stylesheet type="text/xsl" href="http://ilcsoft.desy.de/marlin/marlin.xsl"? -->
<!-- ?xml-stylesheet type="text/xsl" href="marlin.xsl"? -->

<!--
============================================================================================================================
   Steering File generated by Marlin GUI on Thu Apr  5 16:42:15 2012

   WARNING: - Please be aware that comments made in the original steering file were lost.
            - Processors that are not installed in your Marlin binary lost their parameter's descriptions and types as well.
            - Extra parameters that aren't categorized as default in a processor lost their description and type.
============================================================================================================================
-->


<marlin xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://ilcsoft.desy.de/marlin/marlin.xsd">

   <execute>
      <processor name="MyAIDAProcessor"/>
      <processor name="MyEUTelAutoPedestalNoiseProcessor"/>
      <@HotPixelLeft@processor name="LoadHotPixelDB"/@HotPixelRight@>
      <processor name="MyFixedFrameClustering"/>
      <processor name="MyLCIOOutputProcessor"/>
   </execute>

   <global>
      <parameter name="LCIOInputFiles"> @ResultPath@/@RunType@/@prefix@@RunNumber@/@RunNumber@-calibrated.slcio </parameter>
      <parameter name="GearXMLFile" value="@GearFile@"/>
      <parameter name="MaxRecordNumber" value="999999999"/>
      <parameter name="SkipNEvents" value="0"/>
      <parameter name="SupressCheck" value="false"/>
      <parameter name="Verbosity" value="MESSAGE"/>
   </global>

 <processor name="MyAIDAProcessor" type="AIDAProcessor">
 <!--Processor that handles AIDA files. Creates on directory per processor.  Processors only need to create and fill the histograms, clouds and tuples. Needs to be the first ActiveProcessor-->
  <!-- compression of output file 0: false >0: true (default) -->
  <parameter name="Compress" type="int" value="1"/>
  <!-- filename without extension-->
  <parameter name="FileName" type="string" value="@HistoPath@/@RunType@/@prefix@@RunNumber@/@RunNumber@-clusters"/>
  <!-- type of output file root (default) or xml )-->
  <parameter name="FileType" type="string" value="root"/>
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

<processor name="MyEUTelAutoPedestalNoiseProcessor" type="EUTelAutoPedestalNoiseProcessor">
  <!--EUTelAutoPedestalNoiseProcessor produces initial pedestal / noise / status with user provided values-->
  <!--Noise local collection-->
  <parameter name="NoiseCollectionName" type="string" lcioOutType="TrackerData"> noise </parameter>
  <!--Pedestal local collection-->
  <parameter name="PedestalCollectionName" type="string" lcioOutType="TrackerData"> pedestal </parameter>
  <!--Pixel status collection-->
  <parameter name="StatusCollectionName" type="string" lcioOutType="TrackerRawData"> status </parameter>
  <!--The initial value of noise (one value for detector)-->
  <parameter name="InitNoiseValue" type="FloatVec"> @InitNoiseValue@ </parameter>
  <!--The initial value of pedestal (one value for detector)-->
  <parameter name="InitPedestalValue" type="FloatVec"> @InitPedestalValue@ </parameter>
  <!--The maximum pixel along x (default 255, one value per detector)-->
  <parameter name="MaxXVector" type="IntVec"> @MaxXVector@ </parameter>
  <!--The maximum pixel along y (default 255, one value per detector)-->
  <parameter name="MaxYVector" type="IntVec"> @MaxYVector@ </parameter>
  <!--The minimum pixel along x (default 0, one value per detector)-->
  <parameter name="MinXVector" type="IntVec"> @MinXVector@ </parameter>
  <!--The minimum pixel along y (default 0, one value per detector)-->
  <parameter name="MinYVector" type="IntVec"> @MinYVector@ </parameter>
  <!--The sensorID for the generated collection (one per detector)-->
  <parameter name="SensorIDVec" type="IntVec"> @SensorIDVec@ </parameter>
</processor>

  <processor name="LoadHotPixelDB" type="ConditionsProcessor">
    <parameter name="SimpleFileHandler" type="StringVec"> hotpixel @DbPath@/@RunType@/@prefix@@RunNumber@/@RunNumber@-hotpixel-db.slcio hotpixel </parameter>
  </processor>


<processor name="MyFixedFrameClustering" type="EUTelClusteringProcessor">
  <!--EUTelClusteringProcessor is looking for clusters into a calibrated pixel matrix.-->

  <!--
  INPUT / OUTPUT
  -->
  <!--Input calibrated data not zero suppressed collection name-->
  <parameter name="NZSDataCollectionName" type="string" lcioInType="TrackerData"> NOdata </parameter>
  <!--Noise (input) collection name-->
  <parameter name="NoiseCollectionName" type="string" lcioInType="TrackerData"> noise </parameter>
  <!--Pixel status (input) collection name-->
  <parameter name="StatusCollectionName" type="string" lcioInType="TrackerRawData"> status </parameter>
  <!--Input of Zero Suppressed data-->
  <parameter name="ZSDataCollectionName" type="string" lcioInType="TrackerData"> data </parameter>
  <!--Cluster (output) collection name-->
  <parameter name="PulseCollectionName" type="string" lcioOutType="TrackerPulse"> cluster </parameter>
  <parameter name="HotPixelCollectionName" type="string" value="hotpixel" />
  <!--
  Clustering algorithm
  -->
  <!--Select here which algorithm should be used for NZS clustering.
  Available algorithms are:
  -> FixedFrame: for custer with a given size-->
  <parameter name="ClusteringAlgo" type="string" value="FixedFrame"/>

  <!--Select here which algorithm should be used for ZS clustering.
  Available algorithms are:
  -> SparseCluster: for cluster in ZS frame
  -> SparseCluster2: for cluster in ZS frame with better performance
  -> FixedFrame: for cluster with a given size-->
  <parameter name="ZSClusteringAlgo" type="string" value="FixedFrame"/>

  <!--
FID FRAME ( for both NZS and ZS )
  -->
  <!--Threshold in SNR for seed pixel identification-->
  <parameter name="FFSeedCut" type="float" value="3.5"/>
  <!--Threshold in SNR for cluster identification-->
  <parameter name="FFClusterCut" type="float" value="2.5"/>
  <!--Maximum allowed cluster size along x (only odd numbers)-->
  <parameter name="FFClusterSizeX" type="int" value="3"/>
  <!--Maximum allowed cluster size along y (only odd numbers)-->
  <parameter name="FFClusterSizeY" type="int" value="3"/>

  <!--
SPSECLUSTER and SPARSECLUSTER2 (use with care)
  -->
  <!--Threshold in SNR for clusters contained in ZS data-->
  <parameter name="SparseClusterCut" type="float" value="2.5"/>
  <!--Threshold in SNR for seed pixel contained in ZS data-->
  <parameter name="SparseSeedCut" type="float" value="3.5"/>
  <!--Minimum distance between sparsified pixel ( touching == sqrt(2)) -->
  <parameter name="SparseMinDistance" type="float" value="0"/>

  <!--
  HISTOGRAMMING
  -->
  <!--Switch on or off the histogram filling-->
  <parameter name="HistogramFilling" type="bool" value="@HistogramFilling@"/>
  <!--This is the name of the histogram information file-->
  <parameter name="HistoInfoFileName" type="string" value="@HistoInfo@"/>
  <!--The list of cluster N to be filled.For example 7 means filling the cluster spectra with the 7 most significant pixels-->
  <parameter name="ClusterN" type="IntVec" value="4 6 8 9"/>
  <!--The list of cluster NxN to be filled.For example 3 means filling the 3x3 histogram spectrum-->
  <parameter name="ClusterNxN" type="IntVec" value="3"/>

</processor>

 <processor name="MyLCIOOutputProcessor" type="LCIOOutputProcessor">
 <!--Writes the current event to the specified LCIO outputfile. Needs to be the last ActiveProcessor.-->
  <!--drops the named collections from the event-->
  <!--parameter name="DropCollectionNames" type="StringVec"> TPCHits HCalHits </parameter-->
  <!--drops all collections of the given type from the event-->
  <!--parameter name="DropCollectionTypes" type="StringVec"> SimTrackerHit SimCalorimeterHit </parameter-->
  <!-- write complete objects in subset collections to the file (i.e. ignore subset flag)-->
  <!--parameter name="FullSubsetCollections" type="StringVec" value="MCParticlesSkimmed"/-->
  <!--force keep of the named collections - overrules DropCollectionTypes (and DropCollectionNames)-->
  <!--parameter name="KeepCollectionNames" type="StringVec" value="MyPreciousSimTrackerHits"/-->
  <!-- name of output file -->
  <parameter name="LCIOOutputFile" type="string" value="@ResultPath@/@RunType@/@prefix@@RunNumber@/@RunNumber@-clusters.slcio"/>
  <!--write mode for output file:  WRITE_APPEND or WRITE_NEW-->
  <parameter name="LCIOWriteMode" type="string" value="WRITE_NEW"/>
  <!--will split output file if size in kB exceeds given value - doesn't work with APPEND and NEW-->
  <!--parameter name="SplitFileSizekB" type="int" value="1992294"/-->
  <!--verbosity level of this processor ("DEBUG0-4,MESSAGE0-4,WARNING0-4,ERROR0-4,SILENT")-->
  <!--parameter name="Verbosity" type="string" value=""/-->
</processor>

</marlin>
